version: '3.8'
services:

  webserver:
    image: ${CONTAINER_REGISTRY_ACCOUNT}/ws:${WS_TAG}
    container_name: proxy_server
    restart: unless-stopped
    depends_on:
      - microservice1
      - microservice2
    build:
      context: web
      dockerfile: Dockerfile
    env_file:
      - web/.env
    ports:
      - 80:8080
    networks:
      - demoNet

  microservice1:
    image: ${CONTAINER_REGISTRY_ACCOUNT}/ms1:${MS1_TAG}
    restart: unless-stopped
    deploy:
      replicas: ${MS1_REPLICAS}
    build:
        context: micro1
        dockerfile: Dockerfile
    env_file:
      - micro1/.env
    networks:
      - demoNet
    # healthcheck:
    #   test: wget --spider http://localhost:8000/health || exit 1
    #   interval: 1m30s
    #   timeout: 30s
    #   retries: 5
    #   start_period: 30s

  microservice2:
    image: ${CONTAINER_REGISTRY_ACCOUNT}/ms2:${MS2_TAG}
    restart: unless-stopped
    deploy:
      replicas: ${MS2_REPLICAS}
    build:
        context: micro2
        dockerfile: Dockerfile
    env_file:
      - micro2/.env
    networks:
      - demoNet

  fallback:
    image: ${CONTAINER_REGISTRY_ACCOUNT}/fallback:${FB_TAG}
    restart: unless-stopped
    deploy:
      replicas: ${FB_REPLICAS}
    build:
        context: fallback
        dockerfile: Dockerfile
    env_file:
      - fallback/.env
    networks:
      - demoNet

networks:
  demoNet:
    driver: bridge
    ipam:
      config:
        - subnet: 17.22.0.0/16
          gateway: 17.22.0.1
